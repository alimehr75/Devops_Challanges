#server {
#		server_name www.gholi.com gholi.com;
#		return 301 https://$server_name$request_uri;
#}

# Here definning zones for connection or requests : 

limit_conn_zone $binary_remote_addr  zone=test:5m;
limit_req_zone $binary_remote_addr  zone=onerps:5m rate=1r/s;

server {
		listen 8580 default_server;

		server_name www.gholi.com gholi.com;
		root /var/www/gholi;
		index index.html index.htm;

		error_log /var/log/nginx/error_gholi.log;
		access_log /var/log/nginx/access_gholi.log main;

#   ssl_certificate /etc/nginx/ssl/example.crt;
#   ssl_certificate_key /etc/nginx/ssl/example.key;
#   ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
#
# cipher suits
#
#   ssl_prefer_server_ciphers on;
#   ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#
# DH Params  --> openssl dhparam 2048 (The bytes must be eq to certificate created before) -out /etc/nginx/ssl/dhparams.pem
#
#   ssl_dhparams /etc/nginx/ssl/ghparams.pem;
#
# SSL Session
#
#   ssl_session_cache shared:SSL:40m;
#   ssl_session_timout 4h;
#   ssl_session_tickets on;
#

		location / {
			limit_rate 1M;
			limit_conn test 3;
			limit_req zone=onerps burst=5;
			try_files $uri $uri/ =404;
		}

		location /auth {
			access_log /var/log/nginx/access_auth.log main;
			error_log /var/log/nginx/error_auth.log;
			satisfy all;
			# here just allows this ip to nginx allow and deny must be respective to each other , 
			# 1st allow then deny
			allow 192.168.1.106; 
			deny all;
			auth_basic "Test for Authuntication!";
			# auth basic file generated with htpasswd with apache2_utils package
			auth_basic_user_file /etc/nginx/.htpasswd;

		}
		
		# here if anything be after search , it will be search by google else goes for search page
		location /search {
			rewrite ^(.*)/search(.*)$ http://www.google.com/search?q=$2 permanent;

		}

		location /info {
			alias /var/www/info;

		}


		location /other/ {
			proxy_pass http://192.168.1.105:4567/;
		}



}
